name: Dependency Security Check

# Run weekly on Monday at 9 AM UTC, and on every pull request
on:
  schedule:
    - cron: '0 9 * * 1'  # Every Monday at 9 AM UTC
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read
  security-events: write
  issues: write

jobs:
  python-security:
    name: Python Dependency Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety pip-audit bandit

      - name: Run Safety check
        continue-on-error: true
        run: |
          pip install -r requirements.txt
          safety check --json --output safety-report.json || true
          safety check || true

      - name: Run pip-audit
        continue-on-error: true
        run: |
          pip-audit --requirement requirements.txt --format json --output pip-audit-report.json || true
          pip-audit --requirement requirements.txt || true

      - name: Run Bandit security linter
        continue-on-error: true
        run: |
          bandit -r . -f json -o bandit-report.json || true
          bandit -r . || true

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: python-security-reports
          path: |
            safety-report.json
            pip-audit-report.json
            bandit-report.json

  nodejs-security:
    name: Node.js Dependency Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        continue-on-error: true
        run: |
          npm audit --json > npm-audit-report.json || true
          npm audit || true

      - name: Check for outdated packages
        continue-on-error: true
        run: npm outdated || true

      - name: Upload npm audit report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: nodejs-security-reports
          path: npm-audit-report.json

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          fail-on-severity: moderate
          deny-licenses: GPL-3.0, AGPL-3.0

  trivy-scan:
    name: Trivy Vulnerability Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Run Trivy with table output
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'
          severity: 'CRITICAL,HIGH,MEDIUM'

  snyk-security:
    name: Snyk Security Scan
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule'  # Skip on scheduled runs to save Snyk credits

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          npm ci

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/python@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

      - name: Run Snyk for Node.js
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest

    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'python', 'javascript' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-extended,security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  license-check:
    name: License Compliance Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install pip-licenses
        run: pip install pip-licenses

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Check Python licenses
        run: |
          pip-licenses --format=markdown --output-file=python-licenses.md
          pip-licenses --format=json --output-file=python-licenses.json
          pip-licenses

      - name: Set up Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'

      - name: Install license-checker
        run: npm install -g license-checker

      - name: Check Node.js licenses
        run: |
          npm ci
          license-checker --json --out nodejs-licenses.json || true
          license-checker --summary || true

      - name: Upload license reports
        uses: actions/upload-artifact@v4
        with:
          name: license-reports
          path: |
            python-licenses.md
            python-licenses.json
            nodejs-licenses.json

  create-security-issue:
    name: Create Security Issue on Vulnerability
    runs-on: ubuntu-latest
    needs: [python-security, nodejs-security, trivy-scan]
    if: failure() && github.event_name == 'schedule'

    steps:
      - name: Create issue for security vulnerabilities
        uses: actions/github-script@v7
        with:
          script: |
            const title = 'Security Vulnerabilities Detected - Weekly Scan';
            const body = `
            ## Security Scan Alert

            The weekly security scan has detected potential vulnerabilities in dependencies.

            **Scan Date:** ${new Date().toISOString()}

            ### Action Required

            Please review the following workflow runs for details:
            - [Workflow Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

            ### Reports Available

            Check the artifacts section of the workflow run for detailed reports:
            - Python security reports (Safety, pip-audit, Bandit)
            - Node.js security reports (npm audit)
            - Trivy vulnerability scan results

            ### Next Steps

            1. Review the security reports
            2. Update vulnerable dependencies
            3. Test the application after updates
            4. Close this issue once resolved

            ---
            *This issue was automatically created by the Dependency Security Check workflow.*
            `;

            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['security', 'dependencies', 'automated']
            });
